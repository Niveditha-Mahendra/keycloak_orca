# Move the JWT token from a cookie to the Authorization header of the
# request. Used in community frontend to keep the session.
map $http_cookie $auth_header {
  default $http_authorization;
  "~*_fidor_session=(?<jwt>[^;]+)" "Bearer $jwt";
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

map $http_x_forwarded_for $allowed {
  default         0;
  82.135.122.35   1;
  217.110.137.114 1;
  213.61.80.210   1;
  192.168.*       1;
}

server {
  listen       80 default_server;
  server_name _;
  location / {
      return 200 "I am alive!\n-- Nginx";
      add_header Content-Type text/plain;
  }
}

server {
  listen       80;
  server_name    community.* coolcommunity.*;

  location /api {
    resolver 127.0.0.11 ipv6=off;

    set $target http://community_api:8080;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Authorization $auth_header;
    proxy_pass $target;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
  }

  location /api/admin/ {
    if ( $allowed = 0 ) { return 403; }

    resolver 127.0.0.11 ipv6=off;

    set $target http://community_api:8080;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Authorization $auth_header;
    proxy_pass $target;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
  }

  location / {
    resolver 127.0.0.11 ipv6=off;

    set $target http://community_web:8080;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_pass $target;
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
  }
}

server {
  listen       80;
  server_name  newcommunity.*;

  location /api/cable {
    resolver 127.0.0.11 ipv6=off;

    set $target http://community_api:8080;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto http;
    proxy_set_header Authorization $auth_header;
    proxy_pass $target;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
  }
}

server {
  listen       80;
  server_name  comapi.*;

  location / {
    resolver 127.0.0.11 ipv6=off;

    set $target http://community_api:8080;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass $target;
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
  }

  location /admin {
    if ( $allowed = 0 ) { return 403; }

    resolver 127.0.0.11 ipv6=off;

    set $target http://community_api:8080;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass $target;
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
  }
}

server {
  listen       80;
  server_name  errbit.*;

  location / {
    resolver 127.0.0.11 ipv6=off;

    set $target http://errbit_web:8080;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass $target;
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
  }
}

server {
  listen       80;
  server_name  rmq.*;

  location / {
    resolver 127.0.0.11 ipv6=off;

    set $target http://rabbitmq:15672;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass $target;
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
  }
}

server {
  listen       80;
  server_name  mail.*;

  location / {
    resolver 127.0.0.11 ipv6=off;

    set $target http://mailcatcher:1080;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass $target;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
  }
}

server {
  listen       80;
  server_name  keycloak.*;

  location / {
    resolver 127.0.0.11 ipv6=off;

    set $target http://keycloak:8181;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass $target;
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
  }
}
